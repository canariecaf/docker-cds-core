#!/bin/bash
#
#	mdfetch
#
#	sources the /root/env environment settings and then fetches the aggregate
#
#

# uncomment these below if you want to debug or diagnose things
#set -u 
#set -e 
#set -x

# Container may have overrides on some settings, let's detect what matters to us:

OVERRIDE_CDS_AGGREGATE=${CDS_AGGREGATE}
echo "Storing OVERRIDE_CDS_AGGREGATE as: ${OVERRIDE_CDS_AGGREGATE}"
# sourcing our default variables we were built with

. /root/env


function isGoodURL ()
{
	# 0 is 'good' or true since this maps to a command that successfully ran with zero errors
	# 1 is 'bad' or false since it maps to a command that errored out
	# see: http://stackoverflow.com/questions/5431909/bash-functions-return-boolean-to-be-used-in-if

	local regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
	local theURL=""

	if [ -z "$1" ]                           # Is parameter #1 zero length?
   	then
     	echo "Parameter #1 is zero length, invalid invocation"  # Or no parameter passed.
     	return 1
 	else
 		theURL=$1
 	fi
	
	if [[ $theURL =~ $regex ]]
	then 
	
		return 0

	else
    	echo "Nope, $theURL is not a url"
    	return 1
	fi

}

function log2html ()
{
	local date_epoch=`date +%s`
	echo "date_epoch=${date_epoch}#$1" > ${CDS_HTMLROOTDIR}/status.txt
}


# Our default starts empty and then we go through a precedence order check 
#
# Highest to lowest precedence order is:
#	- Command line arguement to the script
# 	- Arguement to docker container passed in
#	- Default setting that the container was originally built with
#

AGGDEFAULT="";

if [ "${OVERRIDE_CDS_AGGREGATE}" = "" ]
	then
	echo "No container override detected"
	AGGDEFAULT=${CDS_AGGREGATE}
else
	echo "Detected container with a specific aggregate, going to use that instead: ${OVERRIDE_CDS_AGGREGATE}"
	AGGDEFAULT=${OVERRIDE_CDS_AGGREGATE}
fi


if [ $# -eq 0 ]
  then    
    echo "No command line arguments supplied, default will be ${AGGDEFAULT}"
fi
	AGGREGATE=${1:-$AGGDEFAULT}

#
# This is our regex trap for URLs to ensure we have a url. If not, we skip
regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'

if [[ $AGGREGATE =~ $regex ]]
then 
	curl  ${AGGREGATE} -o ${CDS_HTMLROOTDIR}/metadata.myFederation.xml
	/usr/bin/php ${CDS_HTMLROOTDIR}/readMetadata.php > ${CDS_CODEBASE}/stats.txt
	chown www-data:www-data /tmp/wayf_metadata.lock
else
    echo "aggregate invalid, skipping update"
fi
 	LOGLINE=`cat ${CDS_CODEBASE}/stats.txt |awk -F"(" '(NF>1 && NF!="") {print $2}' |sed 's/)$//'`
 	log2html "level=INFO#refreshrate=${CDS_REFRESHFREQINMIN}#counts=${LOGLINE}"	

